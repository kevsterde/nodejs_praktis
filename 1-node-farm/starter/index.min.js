const http=require("http"),url=require("url"),fs=require("fs"),data=fs.readFileSync(`${__dirname}/dev-data/data.json`,"utf-8"),dataObj=JSON.parse(data),tempOverview=fs.readFileSync(`${__dirname}/templates/template-overview.html`,"utf-8"),tempCard=fs.readFileSync(`${__dirname}/templates/template-card.html`,"utf-8"),tempProd=fs.readFileSync(`${__dirname}/templates/template-product.html`,"utf-8"),replaceTemplate=(temp,product)=>{let output=temp.replace(/{%PROPS.NAME%}/g,product.productName);return output=output.replace(/{%PROPS.PLACE%}/g,product.from),output=output.replace(/{%PROPS.IMG%}/g,product.image),output=output.replace(/{%PROPS.NUTRI%}/g,product.nutrients),output=output.replace(/{%PROPS.QTY%}/g,product.quantity),output=output.replace(/{%PROPS.PRICE%}/g,product.price),output=output.replace(/{%PROPS.DESC%}/g,product.description),output=output.replace(/{%PROPS.ID%}/g,product.id),product.organic||(output=output.replace(/{%PROPS.ORGANIC%}/g,"not-organic")),output},server=http.createServer((req,res)=>{console.log(req.url);const pathname=req.url;if("/overview"===pathname||"/"===pathname){res.writeHead(200,{"Content-type":"text/html"});const cardsHTML=dataObj.map(item=>replaceTemplate(tempCard,item)).join(""),finalOverView=tempOverview.replace(/{%PRODUCT_CARDS%}/g,cardsHTML);res.end(finalOverView)}else"/product"===pathname?(res.writeHead(200,{"Content-type":"text/html"}),res.end(tempProd)):"/api"===pathname?(res.writeHead(200,{"Content-type":"application/json"}),res.end(data)):(res.writeHead(404,{"Content-type":"text/html","my-own-header":"hello-world"}),res.end("<h1>Page Not Found!</h1>"))});server.listen(8e3,"127.0.0.4",()=>{console.log("Listening to request on port 8000")});